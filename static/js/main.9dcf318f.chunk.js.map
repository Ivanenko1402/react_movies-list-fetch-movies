{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","setMovies","useState","inputValue","setInputValue","setMovie","isLoading","setIsLoading","showError","setShowError","event","a","preventDefault","findMovieData","Poster","Title","Plot","imdbID","findMovie","error","onSubmit","e","submitForm","htmlFor","type","id","placeholder","value","onChange","target","changeInputValue","disabled","onClick","every","item","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9dcf318f.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=f6c3d740';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  movies: Movie[],\n  setMovies: (movies: Movie[]) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [inputValue, setInputValue] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showError, setShowError] = useState(false);\n\n  async function submitForm(event: React.FormEvent) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    const findMovieData = await getMovie(inputValue);\n\n    try {\n      if ('Error' in findMovieData) {\n        setShowError(true);\n      } else {\n        setShowError(false);\n\n        const {\n          Poster,\n          Title,\n          Plot,\n          imdbID,\n        } = findMovieData;\n\n        const findMovie = {\n          title: Title,\n          description: Plot,\n          imgUrl: Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : Poster,\n          imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n          imdbId: imdbID,\n        };\n\n        setMovie(findMovie);\n      }\n    } catch (error) {\n      setShowError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  function addMovie() {\n    if (movie && movies.every(item => item.imdbId !== movie.imdbId)) {\n      setMovies([...movies, movie]);\n    }\n\n    setMovie(null);\n    setInputValue('');\n  }\n\n  const changeInputValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n    setShowError(false);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={e => submitForm(e)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={inputValue}\n              onChange={(event) => changeInputValue(event)}\n            />\n          </div>\n\n          {showError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={\n                isLoading\n                  ? 'button is-light is-loading' : 'button is-light'\n              }\n              disabled={!inputValue}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovie}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          setMovies={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}